"""add new models

Revision ID: 8997f9273a47
Revises: d9cb80284ef8
Create Date: 2024-01-29 18:25:42.989748

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8997f9273a47'
down_revision = 'd9cb80284ef8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('color',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('size',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('warehouse',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_column('collection', 'created_at')
    op.add_column('product', sa.Column('model_id', sa.Integer(), nullable=True))
    op.add_column('product', sa.Column('color_id', sa.Integer(), nullable=True))
    op.add_column('product', sa.Column('size_id', sa.Integer(), nullable=True))
    op.drop_constraint('product_category_id_fkey', 'product', type_='foreignkey')
    op.drop_constraint('product_collection_id_fkey', 'product', type_='foreignkey')
    op.create_foreign_key(None, 'product', 'size', ['size_id'], ['id'])
    op.create_foreign_key(None, 'product', 'color', ['color_id'], ['id'])
    op.create_foreign_key(None, 'product', 'model', ['model_id'], ['id'])
    op.drop_column('product', 'category_id')
    op.drop_column('product', 'slug')
    op.drop_column('product', 'collection_id')
    op.drop_column('product', 'description')
    op.drop_column('product', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('product', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('product', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('product', sa.Column('collection_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('product', sa.Column('slug', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('product', sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'product', type_='foreignkey')
    op.drop_constraint(None, 'product', type_='foreignkey')
    op.drop_constraint(None, 'product', type_='foreignkey')
    op.create_foreign_key('product_collection_id_fkey', 'product', 'collection', ['collection_id'], ['id'])
    op.create_foreign_key('product_category_id_fkey', 'product', 'category', ['category_id'], ['id'])
    op.drop_column('product', 'size_id')
    op.drop_column('product', 'color_id')
    op.drop_column('product', 'model_id')
    op.add_column('collection', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_table('model')
    op.drop_table('warehouse')
    op.drop_table('size')
    op.drop_table('color')
    # ### end Alembic commands ###
